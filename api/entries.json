{
  "entries": [
    {
      "id": 1,
      "date": "2020-01-19",
      "concepts": "Data collection with objects",
      "entry": "In this exercise we covered how to record data input using objects and their properties.",
      "mood": "happy"
    },
    {
      "id": 3,
      "date": "2020-01-19",
      "concepts": "Git workflow",
      "entry": "In this exercise we covered how to use git and github to save versions of our codebase to the github cloud, so that we won't lose our hard work and so that we have a reference to previous code versions if we need them.",
      "mood": "happy"
    },
    {
      "date": "2020-02-03",
      "concepts": "Posting data to database.",
      "entry": "Kristen helped me fix some syntax issues so that user input would get posted to the DB.",
      "mood": "happy",
      "id": 4
    },
    {
      "date": "2020-02-12",
      "concepts": "DWDWd",
      "entry": "afafawfafw",
      "mood": "fine",
      "id": 5
    },
    {
      "date": "2020-02-07",
      "concepts": "Posting data to database.FW",
      "entry": "wWdd",
      "mood": "sad",
      "id": 6
    },
    {
      "date": "2020-02-06",
      "concepts": "DWDWd",
      "entry": "feeeee eeeeeee ee",
      "mood": "sad",
      "id": 7
    },
    {
      "date": "2020-02-08",
      "concepts": "I got the filtered data display working!",
      "entry": "This morning right after I woke up I was able to quickly fix what I was having so much trouble with yesterday. First I had to fix my import syntax to match my exports. Then I had to import the container element that holds the JSON data on the DOM correctly (not as one feature but in a list in {}. Then, in the click event for each mood-filtering button, before I ran the method that display the JSON data to the DOM I reset my container element to an empty string, so that each time a btn is clicked the container would empty itself and then display the corresponding data.",
      "mood": "happy",
      "id": 8
    }
  ]
}